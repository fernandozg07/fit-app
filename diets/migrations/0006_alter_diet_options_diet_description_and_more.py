# Generated by Django 5.1 on 2025-07-26 03:35

import diets.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('diets', '0005_alter_diet_options_alter_dietfeedback_options_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='diet',
            options={'ordering': ['-date', 'meal'], 'verbose_name': 'Dieta', 'verbose_name_plural': 'Dietas'},
        ),
        migrations.AddField(
            model_name='diet',
            name='description',
            field=models.TextField(blank=True, help_text='Descrição detalhada da refeição.', null=True),
        ),
        migrations.AddField(
            model_name='diet',
            name='dietary_restrictions',
            field=models.JSONField(blank=True, default=list, help_text="Restrições dietéticas (e.g., 'vegetariano', 'sem glúten') em formato JSON."),
        ),
        migrations.AddField(
            model_name='diet',
            name='goal',
            field=models.CharField(blank=True, choices=[('perda_peso', 'Perda de peso'), ('ganho_muscular', 'Ganho de massa muscular'), ('manutencao', 'Manutenção'), ('resistencia', 'Resistência')], help_text='Objetivo fitness principal para o plano de dieta.', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='diet',
            name='ingredients',
            field=models.JSONField(blank=True, default=list, help_text='Lista de ingredientes em formato JSON.'),
        ),
        migrations.AddField(
            model_name='diet',
            name='name',
            field=models.CharField(blank=True, help_text="Nome da refeição (e.g., 'Omelete de Vegetais').", max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='diet',
            name='preferred_cuisine',
            field=models.CharField(blank=True, help_text="Tipo de culinária preferida (e.g., 'mediterrânea', 'asiática').", max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='diet',
            name='preparation_time_minutes',
            field=models.IntegerField(blank=True, help_text='Tempo de preparo estimado em minutos.', null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='diet',
            name='rating',
            field=models.FloatField(blank=True, help_text='Avaliação da refeição ou do plano de dieta (1-5).', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='diet',
            name='target_calories',
            field=models.FloatField(blank=True, help_text='Meta de calorias diárias para o plano.', null=True, validators=[diets.models.validate_positive]),
        ),
        migrations.AddField(
            model_name='diet',
            name='target_carbs',
            field=models.FloatField(blank=True, help_text='Meta de carboidratos diária em gramas.', null=True, validators=[diets.models.validate_positive]),
        ),
        migrations.AddField(
            model_name='diet',
            name='target_fat',
            field=models.FloatField(blank=True, help_text='Meta de gordura diária em gramas.', null=True, validators=[diets.models.validate_positive]),
        ),
        migrations.AddField(
            model_name='diet',
            name='target_protein',
            field=models.FloatField(blank=True, help_text='Meta de proteína diária em gramas.', null=True, validators=[diets.models.validate_positive]),
        ),
        migrations.AddField(
            model_name='diet',
            name='water_intake_ml',
            field=models.IntegerField(blank=True, help_text='Meta de consumo de água diário em mililitros.', null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='diet',
            name='calories',
            field=models.FloatField(help_text='Calorias da refeição.', validators=[diets.models.validate_positive]),
        ),
        migrations.AlterField(
            model_name='diet',
            name='carbs',
            field=models.FloatField(help_text='Carboidratos em gramas.', validators=[diets.models.validate_positive]),
        ),
        migrations.AlterField(
            model_name='diet',
            name='date',
            field=models.DateField(auto_now_add=True, help_text='Data em que a refeição foi criada/sugerida.'),
        ),
        migrations.AlterField(
            model_name='diet',
            name='fat',
            field=models.FloatField(help_text='Gordura em gramas.', validators=[diets.models.validate_positive]),
        ),
        migrations.AlterField(
            model_name='diet',
            name='meal',
            field=models.CharField(choices=[('breakfast', 'Café da manhã'), ('lunch', 'Almoço'), ('dinner', 'Jantar'), ('snack', 'Lanche'), ('afternoon_snack', 'Lanche da Tarde'), ('pre_workout', 'Pré-treino'), ('post_workout', 'Pós-treino')], help_text='Tipo de refeição (e.g., café da manhã, almoço).', max_length=20),
        ),
        migrations.AlterField(
            model_name='diet',
            name='protein',
            field=models.FloatField(help_text='Proteína em gramas.', validators=[diets.models.validate_positive]),
        ),
        migrations.AlterField(
            model_name='dietfeedback',
            name='feedback_text',
            field=models.TextField(blank=True, help_text='Comentários adicionais do usuário.'),
        ),
        migrations.AlterField(
            model_name='dietfeedback',
            name='rating',
            field=models.IntegerField(help_text='Avaliação (1-5 estrelas).', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
    ]
