# Generated by Django 5.1 on 2025-07-28 14:16

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('diets', '0007_alter_diet_goal'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='diet',
            name='calories',
            field=models.FloatField(help_text='Calorias da refeição.', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='diet',
            name='carbs',
            field=models.FloatField(help_text='Carboidratos em gramas.', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='diet',
            name='fat',
            field=models.FloatField(help_text='Gordura em gramas.', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='diet',
            name='goal',
            field=models.CharField(blank=True, choices=[('perda_peso', 'Perda de peso'), ('ganho_muscular', 'Ganho de massa muscular'), ('manutencao', 'Manutenção'), ('resistencia', 'Resistência')], help_text='Objetivo fitness principal para o plano de dieta.', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='diet',
            name='protein',
            field=models.FloatField(help_text='Proteína em gramas.', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='diet',
            name='target_calories',
            field=models.FloatField(blank=True, help_text='Meta de calorias diárias para o plano.', null=True, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='diet',
            name='target_carbs',
            field=models.FloatField(blank=True, help_text='Meta de carboidratos diária em gramas.', null=True, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='diet',
            name='target_fat',
            field=models.FloatField(blank=True, help_text='Meta de gordura diária em gramas.', null=True, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='diet',
            name='target_protein',
            field=models.FloatField(blank=True, help_text='Meta de proteína diária em gramas.', null=True, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.CreateModel(
            name='ConsumedMealLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(choices=[('breakfast', 'Café da manhã'), ('lunch', 'Almoço'), ('dinner', 'Jantar'), ('snack', 'Lanche'), ('afternoon_snack', 'Lanche da Tarde'), ('pre_workout', 'Pré-treino'), ('post_workout', 'Pós-treino')], help_text='Tipo de refeição consumida.', max_length=20)),
                ('food_items', models.TextField(help_text="Descrição dos itens alimentares consumidos (e.g., '2 ovos, 1 fatia de pão').")),
                ('calories_consumed', models.FloatField(help_text='Calorias consumidas.', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('protein_consumed', models.FloatField(blank=True, help_text='Proteína consumida em gramas.', null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('carbs_consumed', models.FloatField(blank=True, help_text='Carboidratos consumidos em gramas.', null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('fat_consumed', models.FloatField(blank=True, help_text='Gordura consumida em gramas.', null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('date', models.DateField(default=django.utils.timezone.now, help_text='Data em que a refeição foi consumida.')),
                ('time', models.TimeField(blank=True, help_text='Hora em que a refeição foi consumida.', null=True)),
                ('notes', models.TextField(blank=True, help_text='Notas adicionais sobre a refeição consumida.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumed_meals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Refeição Consumida',
                'verbose_name_plural': 'Refeições Consumidas',
                'ordering': ['-date', '-time'],
            },
        ),
    ]
